buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "cz.alenkacz:gradle-scalafmt:${gradle.scalafmt.version}"
        classpath files('../gradle-docker-plugin/build/libs/gradle-docker-plugin-3.2.1-SNAPSHOT.jar')
    }
}

import com.bmuschko.gradle.docker.tasks.DockerInfo
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.DockerClientConfiguration

subprojects {
    buildscript {
        repositories {
            jcenter()
        }
    }

    apply plugin: 'scalafmt'
    scalafmt.configFilePath = gradle.scalafmt.config

    apply plugin: 'com.bmuschko.docker-remote-api'
    docker { dockerClientConfigurations = new HashSet<DockerClientConfiguration> ([
        new DockerClientConfiguration(architecture: 'amd64'),
        new DockerClientConfiguration(architecture: 's390x',
             url: 'https://127.0.0.1:2376',
             certPath: file('/Users/jpspring/.tls/s390x/'))
        ]) }

    task dockerInfo(type: DockerInfo)
    task dockerBuildImage(type: DockerBuildImage, dependsOn: dockerInfo) {
        inputDir = getProjectDir()
        onlyIf { new File(inputDir, 'Dockerfile').exists() }
    }
}
