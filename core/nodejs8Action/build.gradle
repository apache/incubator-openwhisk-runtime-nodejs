apply plugin: 'eclipse'
eclipse {
    project {
        natures 'org.eclipse.wst.jsdt.core.jsNature'
        buildCommand 'org.eclipse.wst.jsdt.core.javascriptValidator'
    }
}

<<<<<<< HEAD
ext.dockerImageName = 'action-nodejs-v8'
apply from: '../../gradle/docker.gradle'
=======
//ext.dockerImageName = 'action-nodejs-v8'
//apply from: '../../gradle/docker.gradle'
>>>>>>> Simplified to not need custom docker-gradle-plugin.

task copyProxy(type: Copy) {
    from '../nodejsActionBase/app.js'
    into '.'
}

task copyRunner(type: Copy) {
    from '../nodejsActionBase/runner.js'
    into '.'
}

task copyService(type: Copy) {
    from '../nodejsActionBase/src/service.js'
    into './src'
}

task cleanup(type: Delete) {
    delete 'app.js'
    delete 'runner.js'
    delete 'src'
}

<<<<<<< HEAD
dockerBuildImage.with() {
    dependsOn copyProxy
    dependsOn copyRunner
    dependsOn copyService
    finalizedBy(cleanup)
}
=======
subprojects {
    dockerBuildImage.with() { 
        inputDir=projectDir
        dependsOn copyProxy
        dependsOn copyRunner
        dependsOn copyService
        finalizedBy(cleanup)
    }
}
>>>>>>> Simplified to not need custom docker-gradle-plugin.
